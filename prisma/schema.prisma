// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["interactiveTransactions"]
}

datasource db {
  provider = "mysql"
  url      = "mysql://${MYSQL_USER}:${MYSQL_ROOT_PASSWORD}@${NODE_API_URL}:${DB_PORT_EXPOSE}/${MYSQL_DATABASE}"
}

model Car {
  id               Int      @id @default(autoincrement())
  car_id_number    String   @unique
  brand            String
  car_number       String   @unique
  model_name       String
  model_year       Int
  driving_distance Int
  price_original   Int
  price_used       Int
  fuel_id          Int
  mission_id       Int
  created_at       DateTime @default(now())
  updated_at       DateTime @default(now())

  fuels          Fuel            @relation(fields: [fuel_id], references: [id])
  missions       Mission         @relation(fields: [mission_id], references: [id])
  Registered_car Registered_car?
  @@map("cars")
}

model Fuel {
  id         Int      @id @default(autoincrement())
  fuel_name  String
  created_at DateTime @default(now())

  Car Car[]
  @@map("fuels")
}

model Mission {
  id           Int      @id @default(autoincrement())
  mission_name String
  created_at   DateTime @default(now())

  Car Car[]
  @@map("missions")
}

model Registered_car {
  id               Int      @id @default(autoincrement())
  car_id           Int      @unique
  progress_id      Int      @unique
  additional_info  String   @db.LongText
  driving_distance Int
  contact          String?
  image            String?  @db.LongText
  address          String?
  address_detail   String?
  lat              String?
  lon              String?
  created_at       DateTime @default(now())

  cars       Car      @relation(fields: [car_id], references: [id])
  progresses Progress @relation(fields: [progress_id], references: [id])

  Registered_car_option Registered_car_option[]
  @@map("registered_cars")
}

model Registered_car_option {
  id         Int      @id @default(autoincrement())
  reg_car_id Int
  option_id  Int
  created_at DateTime @default(now())

  registered_cars Registered_car @relation(fields: [reg_car_id], references: [id])
  options         Option         @relation(fields: [option_id], references: [id])
  @@map("registered_car_options")
}

model Option {
  id          Int      @id @default(autoincrement())
  option_name String
  created_at  DateTime @default(now())

  Registered_car_option Registered_car_option[]
  @@map("options")
}

model Progress {
  id                Int       @id @default(autoincrement())
  quote_requested   DateTime?
  dealer_assigned   DateTime?
  dealer_consulting DateTime?
  selling_requested DateTime?
  selling_completed DateTime?
  is_new            Int       @default(1)
  created_at        DateTime  @default(now())
  updated_at        DateTime?

  Registered_car Registered_car?
  @@map("progresses")
}
